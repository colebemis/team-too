# import * from "./generated/prisma.graphql"

type Query {
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput): [User]
  product(where: ProductWhereUniqueInput!): Product
  categories(where: CategoryWhereInput): [Category]
  products(where: ProductWhereInput): [Product]
  order(where: OrderWhereUniqueInput!): Order
  orders(where: OrderWhereInput, orderBy: OrderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Order]!
  orderProduct(where: OrderProductWhereUniqueInput!): OrderProduct
  orderProducts(where: OrderProductWhereInput, orderBy: OrderProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OrderProduct]!
}

type Mutation {
  logIn(email: String!, password: String!): AuthPayload!
  createUser(data: UserCreateInput!): AuthPayload!
  deleteUser(where: UserWhereUniqueInput!): User
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  createOrder(data: OrderCreateInput!): Order!
  updateOrder(data: OrderUpdateInput!, where: OrderWhereUniqueInput!): Order
  deleteOrder(where: OrderWhereUniqueInput!): Order
  createProduct(data: ProductCreateInput!): Product!
  updateProduct(data: ProductUpdateInput!, where: ProductWhereUniqueInput!): Product
  deleteProduct(where: ProductWhereUniqueInput!): Product
}

type AuthPayload {
  token: String!
  user: User!
}
