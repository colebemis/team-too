type User {
  id: ID! @unique
  name: String!
  email: String!
  password: String!
  isAdmin: Boolean
}

type Order {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  products: [OrderProduct!]! @relation(name: "ProductsOfOrder", onDelete:CASCADE)

  status: String! 
  customer: Customer! @relation(name: "OrderByCustomer", onDelete:CASCADE)
  shippingAddress: Address @relation(name: "ShippingAddress", onDelete:CASCADE)
  billingAddress: Address @relation(name: "BillingAddress", onDelete:CASCADE)
  
  payment: CreditCard @relation(name: "CreditCardOfOrder", onDelete: CASCADE)

  subtotal: Float!
  tax: Float!
  total: Float!
}

type OrderProduct {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  title: String!
  imageURL: String!
  description: String!
  price: Float!
  quantity: Int!
}

type Product {
  id: ID! @unique
  imageURL: String!
  title: String!
  description: String!
  price: Float!
  stock: Int!
  categories: [Category!]! @relation(name: "ProductsWithCategory")
}

type Category {
  id: ID! @unique
  name: String!
  products: [Product!]! @relation(name: "ProductsWithCategory", onDelete: CASCADE)
}

type Address {
  id: ID! @unique
  name: String!
  line1: String!
  line2: String
  city: String!
  state: String!
  zip: String!
}

type Customer {
  id: ID! @unique
  name: String!
  email: String!
}

type CreditCard {
  id: ID! @unique
  name: String!
  number: String!
  expDate: DateTime!
  cvv: String!
}